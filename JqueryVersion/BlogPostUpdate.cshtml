@model Sabio.Web.Models.ViewModels.ItemViewModel<int>

@{
    ViewBag.Title = "Blog";
}

<div class="content-header">
    <div class="header-section">
        <h2>
            <strong>Blog Post</strong>
            <br>
            <small>What's on your mind?</small>
        </h2>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="block full block-alt-noborder">
            <br />
            <form id="frmContainer">
                <input type="hidden" id="blogId" name="Id" value="@Model.Item" />
                <div class="form-group">
                    <label for="inputTitle">Title</label>
                    <input type="text" class="form-control title1" id="txtTitle" name="Title" placeholder="Enter Your Title" />
                </div>

                <div class="form-group">
                    <label for="inputAuthor">Author</label>
                    <input type="text" class="form-control author" id="txtAuthor" name="Author" placeholder="Enter Your Name" />
                </div>

                <div class="form-group">
                    <label for="inputMessage">Blog Message</label>
                    <textarea type="textarea" class="form-control message" id="txtBlog" rows="12" name="Message" placeholder="Enter Your Message"></textarea>
                </div>

                <div class="form-group">
                    <label for="inputTags">Tags</label>
                    <select style="width:100%" data-input="select2-tags" multiple="" tabindex="-1" name="tagIds" class="select2-hidden-accessible tagsDropDown" id="tagsGetById" aria-hidden="true"></select>
                </div>
                <button type="button" class="btn btn-primary" id="cmdSubmit">Submit</button>
                <button type="button" class="btn btn-default" id="cmdReset">Reset Form</button>
            </form>
        </div>
    </div>
</div>
<div class="alert" id="msgWindow"></div>


@section Scripts {
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/datalus.services.blog.js"></script>
    <script src="~/Scripts/datalus.services.tags.js"></script>
    <script src="~/Wrapkit/scripts/select2.js"></script>
    <script type="text/javascript">
        datalus.page.startUp = function () {
            console.log("Start");
      
            datalus.page.initializeValidation();
            datalus.services.tags.ajaxGetAll(datalus.page.getAllTagsSuccess); 
            datalus.page.getBlogDataForPopulating();
            datalus.page.tagsInputField();
            
        };

       
        datalus.page.tagsInputField = function () {
            var selectOptions = {
                placeholder: "Select a tag",
                allowClear: true 
            };
            $(".tagsDropDown").select2(selectOptions);
        }


        datalus.page.initializeValidation = function () {
            console.log("Initialize Validation");
            
            //  set defaults for the entire plugin
            jQuery.validator.setDefaults({
                debug: true
            });

            //  set rules and error messages
            $("#frmContainer").validate({
                rules: {
                    "Title": {
                        required: true,
                        minlength: 5,
                        maxlength: 50
                    },
                    "Author": {
                        required: true,
                        minlength: 5,
                        maxlength: 20
                    },
                    "Message": {
                        required: true,
                        minlength: 2,
                        maxlength: 1000
                    }
                },
                
                //  provides custom error messages 
                messages: {
                    "Title": {
                        required: "Please enter your title."
                    },
                    "Author": {
                        required: "Please enter your name",
                    },
                    "Message": {
                        required: "Please enter your message.",
                    },
                }
            });
        };


        datalus.page.handlers.onSubmitBlogForm = function () {
            //  checks the data from the form against the rules defined on startUp.
            if ($('#frmContainer').valid()) {
                var blogData = $("#frmContainer").serialize();
                console.log(blogData);
                var id = $("#blogId").val();

                if (id === "0") {
                    datalus.services.blog.insert(blogData, datalus.page.createSuccess, datalus.page.ajaxError);
                    console.log("added");
                    $("#cmdSubmit").html("Update Blog");
                } else {
                    datalus.page.putInputs(id);
                    console.log("updated");
                    return id;
                }
            }
            console.log(datalus.page.grabFormInput);
        };


        datalus.page.putInputs = function (id) {
            var myData = $("#frmContainer").serialize();
            var myData2 = "id=" + id + "&" + myData;
            console.log(myData2);
            datalus.services.blog.update(id, myData2, datalus.page.updateSuccess, datalus.page.error);
        }


        datalus.page.grabFormInput = function () {
            var allFormInput = {};
            allFormInput.id = $("#blogId").val();
            allFormInput.title = $(".title").val();
            allFormInput.author = $(".author").val();
            allFormInput.message = $(".message").val();
            allFormInput.tags = $(".tags").val();
            return allFormInput;
        }


        datalus.page.createSuccess = function (data, status, xhr) {    
            console.log("ajax success");
            if (data && data.item) {
                $("#blogId").val(data.item); 
                console.log(JSON.stringify(data.item));
                datalus.page.logToBottom(data.item);
            }
            $("#msgWindow").removeClass("alert-danger"); 
            $("#msgWindow").addClass("alert-info");      
        }


        datalus.page.updateSuccess = function (data, status, xhr) {
            console.log(JSON.stringify(data));
            datalus.page.logToBottom(data);
            $("#msgWindow").removeClass("alert-danger");
            $("#msgWindow").addClass("alert-info");
            $("#msgWindow").show();
            window.alert("You have successfully updated!!");
        }


        datalus.page.getBlogDataForPopulating = function () {
            console.log("get Blogs");
            var idVal = $("#blogId").val()
            if (idVal !== "0") {
                datalus.services.blog.getById(idVal, datalus.page.getByIdSuccess, datalus.page.error);
            }
        }


        datalus.page.getByIdSuccess = function (data, status, xhr) {
            if (!data && !data.item) {
                return;
            }
            $("#blogId").val(data.item.id);                   
            $(".title").val(data.item.title);
            $(".author").val(data.item.author);
            $(".message").val(data.item.message);
        
            var selectedTagIds = [];
            if (data.item.tags) {
                for (var i = 0; i < data.item.tags.length; i++) {
                    var thisTag = data.item.tags[i];
                    if (thisTag.approved === true) {
                        selectedTagIds.push(thisTag.id);
                    }
                }
            }
            $("#tagsGetById").select2("val", selectedTagIds);
        }


        datalus.page.getAllTagsSuccess = function (data, status, xhr) {
            console.log(JSON.stringify(data));
            var dataToPass = $.map(data, function (obj) {
                obj.id = obj.id;
                obj.text = obj.tagName;
                return obj;
            });
            $("#tagsGetById").select2({
                data: dataToPass
            });
        }
        

        datalus.page.error = function (jqXHR, textStatus, errorThrown) {         
            datalus.page.logToBottom(jqXHR.responseJSON);
            $("#msgWindow").addClass("alert-danger");  
            $("#msgWindow").removeClass("alert-info");  
        }


        datalus.page.logToBottom = function (data) {
            $("#msgWindow").html((JSON.stringify(data)));
        }
       
    </script>
}
